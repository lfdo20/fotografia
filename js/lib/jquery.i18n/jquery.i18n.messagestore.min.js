/*!
 * jQuery Internationalization library - Message Store
 *
 * Copyright (C) 2012 Santhosh Thottingal
 *
 * jquery.i18n is dual licensed GPLv2 or later and MIT. You don't have to do anything special to
 * choose one license or the other and you don't have to notify anyone which license you are using.
 * You are free to use UniversalLanguageSelector in commercial projects as long as the copyright
 * header is left intact. See files GPL-LICENSE and MIT-LICENSE for details.
 *
 * @licence GNU General Public Licence 2.0 or later
 * @licence MIT License
 */
(function(c){var b=function(){this.messages={};this.sources={}};function a(e){var d=c.Deferred();c.getJSON(e).done(d.resolve).fail(function(h,g,f){c.i18n.log("Error in loading messages from "+e+" Exception: "+f);d.resolve()});return d.promise()}b.prototype={load:function(i,d){var f=null,e=null,g=[],h=this;if(typeof i==="string"){c.i18n.log("Loading messages from: "+i);e=a(i).done(function(j){h.set(d,j)});return e.promise()}if(d){h.set(d,i);return c.Deferred().resolve()}else{for(f in i){if(Object.prototype.hasOwnProperty.call(i,f)){d=f;g.push(h.load(i[f],d))}}return c.when.apply(c,g)}},set:function(d,e){if(!this.messages[d]){this.messages[d]=e}else{this.messages[d]=c.extend(this.messages[d],e)}},get:function(d,e){return this.messages[d]&&this.messages[d][e]}};c.extend(c.i18n.messageStore,new b())}(jQuery));